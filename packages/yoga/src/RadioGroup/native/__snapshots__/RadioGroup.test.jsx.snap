// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RadioGroup /> Snapshots should has setted the selected value 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "alignSelf": "center",
          "flexDirection": "row",
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 1
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#D8385E",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={true}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontFamily": "Rubik",
              "fontWeight": "700",
            },
          ]
        }
      >
        Option 2
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`<RadioGroup /> Snapshots should match snapshot with radio button as children 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "alignSelf": "center",
          "flexDirection": "row",
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 1
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 2
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={false}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 40,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;

exports[`<RadioGroup /> Snapshots should match snapshot with small radios 1`] = `
<View>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "alignSelf": "center",
          "flexDirection": "row",
          "position": "relative",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={true}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 32,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 1
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={true}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 32,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 2
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessible={true}
      checked={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      small={true}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 9999,
            "fontSize": 14,
            "height": 32,
            "justifyContent": "center",
            "paddingLeft": 24,
            "paddingRight": 24,
          },
        ]
      }
    >
      <Text
        checked={false}
        style={
          [
            {
              "color": "#231B22",
              "fontFamily": "Rubik",
            },
          ]
        }
      >
        Option 3
      </Text>
    </View>
  </View>
</View>
`;
